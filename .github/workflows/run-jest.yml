name: Run Jest

on:
  push:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build

      - name: Run Server and Client Tests
        run: |
          mkdir -p logs
          
          touch logs/test-summary.txt

          node --experimental-vm-modules node_modules/jest/bin/jest.js \
            --silent=false \
            --config jest/jest.config.cjs > logs/tmp.log

          node --experimental-vm-modules node_modules/jest/bin/jest.js \
            --silent=false \
            --config jest/jest.frontend.config.cjs >> logs/tmp.log

          grep -E '^(PASS|FAIL)' logs/tmp.log \
            | sed 's|^PASS |✔ |' \
            | sed 's|^FAIL |✘ |' \
            | sed 's|build/tests/||' \
            > logs/test-summary.txt

      - name: Send test summary to Discord
        if: always()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          summary_file="logs/test-summary.txt"

          if [ ! -s "$summary_file" ]; then
            echo ".ᐣ Error Loading Data" > "$summary_file"
          fi

          summary="❓ No Summary Cases were Passed to Discord"
          if grep -q '✘' "$summary_file"; then
            summary="❌ Some Test Cases Failed"
          elif grep -q '✔' "$summary_file"; then
            summary="✅ All Test Cases Passed"
          fi

          curl -X POST \
            -H "Content-Type: multipart/form-data" \
            -F "payload_json={\"content\": \"$summary\"}" \
            -F "file=@$summary_file;type=text/plain;filename=test-summary.txt" \
            "$DISCORD_WEBHOOK_URL"